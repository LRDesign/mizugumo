= NinjaHelper

NinjaHelper is a gem designed to provide Rails with JavaScript and AJAX behavior that is:
* absolutely seamless
* completely unobtrusive - no markup whatsoever in your HTML and
* gracefully-degrading: defaults to fully functional and
sensible page-reload behavior when javascript is not available.

NinjaHelper uses NinjaScript by Judson Lester to provide unobtrusive JS behaviors.   For more info, see:
  git@github.com:LRDesign/NinjaScript.git

NinjaHelper is currently in development and is not ready for public use.  We
are expecting a release later this week (note written 1/26/2010).

== Features

NinjaHelper's main features are:
* Easy tools for installing NinjaScript
* A rails helper to automatically output <form>s instead of <a> tags when link_to is called with a :method other than GET.   This allows these links to function as intended for users who lack javascript.
* A default NinjaScript behavior (in your application.js) that automatically converts those forms back into the expected links when Javascript is available, resulting in transparent usability for JS users.
* A scaffold generator that builds both both AJAX behavior and standard "page-reload"  behavior in the controller and view and adds NinjaScript  behaviors to application.js to activate AJAX.  Out of the box, your scaffolded controller will function as an AJAX controller when JS is available but will degrade properly when JS is not available.

== Installing

NinjaHelper is compatible with Rails >= 3.0.0.   We have not tested it with any prior versions of
Rails.   If you use it with an earlier Rails and it works, let us know!

First, add NinjaHelper to your gemfile:

  gem 'mizugumo'

Second, install NinjaHelper files:

  > rails generate mizugumo:install

Third, link to jQuery and NinjaScript in your application layout, plus the optional ninjascript.css.  If using ERB, add these lines:

  <%= javascript_include_tag 'jquery-1.4.2.js' %>
  <%= javascript_include_tag 'jquery.ninja_script.js' %>
  <%= javascript_include_tag 'application.js' %>
  <%= stylesheet_link_tag 'ninjascript' %>

If using Haml, add these instead:

  = javascript_include_tag 'jquery-1.4.2.js'
  = javascript_include_tag 'jquery.ninja_script.js'
  = javascript_include_tag 'application.js'
  = stylesheet_link_tag 'ninjascript'

NOTE:  If you still have javascript_include_tag :defaults, you probably want to remove it.
Ninjascript is meant to work with jQuery, and we don't know what happens if you try to run it
side-by-side with Prototype.

== Scaffold generator

NinjaHelper ships with a scaffold generator that builds out-of-the-box AJAX/UJS scaffolds that degrade gracefully in the absence of JavaScript.   To use it, add this to config/application.rb:

For ERB views:

  config.generators do |g|
    g.scaffold_controller 'mizugumo:scaffold_controller'
    g.template_engine 'mizugumo:erb'
  end

For HAML views:

  config.generators do |g|
    g.scaffold_controller 'mizugumo:scaffold_controller'
    g.template_engine 'mizugumo:haml'
  end


== Contributing to NinjaHelper

* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Evan Dorn and Logical Reality design. See LICENSE.txt for
further details.

