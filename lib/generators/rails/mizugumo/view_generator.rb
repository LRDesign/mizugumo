require 'rails/generators/resource_helpers'

module Mizugumo
  class ViewGenerator < Rails::Generators::NamedBase
    include ::Rails::Generators::ResourceHelpers

    source_root File.dirname(__FILE__) + '/templates'
    argument :attributes, :type => :array, :default => [], :banner => "field:type field:type"
    check_class_collision :suffix => "Controller"

    class_option :orm, :banner => "NAME", :type => :string, :required => true,
      :desc => "ORM to generate the controller for"

    JS_VIEWS = %w(create destroy edit new update)
    HTML_VIEWS =  %w(index edit show new _form)

    def create_root_folder
      empty_directory File.join("app/views", controller_file_path)
    end

    def copy_js_files
      JS_VIEWS.each do |view|
        filename = "#{view}.js.erb"
        template filename, File.join("app/views", controller_file_path, filename)
      end
    end

    # in Rails 3.0, this gets injected into application.js.
    # in Rails 3.1, it's handled by overriding the JS Assets Generator
    def add_javascript
      return if Mizugumo::RAILS_31 
      js_content = <<ADDITIONAL_JS
  Ninja.behavior({
    // Generated by the mizugumo scaffold
    // AJAX behavior for edit, new, and delete actions; applies to both forms and links
    '.new_#{singular_table_name}': Ninja.submitsAsAjax,
    '.edit_#{singular_table_name}': Ninja.submitsAsAjax,
    '.delete_#{singular_table_name}': Ninja.submitsAsAjax
  });
  
ADDITIONAL_JS
     file = File.join("public", "javascripts", "application.js")
     insert_into_file(file, :before => '  Ninja.go();') { js_content }
     
    end

  end
end
